{"mappings":"AAAA,IAAI;AACJ,MAAM,YAAY,EAAE,SAAS,CAAC,kDAAkD;IAC9E,SAAS;AACX;AAEA,uBAAuB;AACvB,MAAM,sCACH,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS;IACd,IAAI,WAAW,KAAK,EAAE;IACtB,eAAe;AACjB,GACC,KAAK,CAAC,CAAC,QAAU;IAChB,QAAQ,KAAK,CAAC;AAChB;AAEF,4BAA4B;AAC5B,eAAe,eAAe,UAAU,EAAE;IACxC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,iGAAiG;QACzH,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,IAAG,EAAE,IAAG,EAAE,GAAG,KAAK,QAAQ;QAClC,UAAU,KAAK;IACjB,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AAEA,YAAY;AAEZ,eAAe,UAAU,QAAQ,EAAE,SAAS,EAAC;IAC3C,IAAG;QACD,IAAG,KACD,IAAI,MAAM;QAEZ,sDAAsD;QACtD,mCAAmC;QACnC,MAAM,EAAE,GAAG,CAAC,OAAO,OAAO,CAAC;YAAC;YAAU;SAAU,EAAE;QAClD,UAAU,KAAK,CAAC;QAChB,EAAE,MAAM,CAAC;YAAC;YAAU;SAAU,EAAE,KAAK,CAAC;IACxC,EAAC,OAAM,OAAM;QACX,QAAQ,GAAG,CAAC;IACd;AACF;AAEA,MAAM;AACN,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,aAAa,gBAAgB,CAAC,SAAS,IAAM;IAC3C,eAAe,UAAU,KAAK;AAChC;AACA,SAAS,gBAAgB,CAAC,YAAY,CAAC,IAAM;IAC3C,IAAI,EAAE,GAAG,KAAK,SACZ,eAAe,UAAU,KAAK;AAElC","sources":["app.js"],"sourcesContent":["let map;\nconst tileLayer = L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n  maxZoom: 19,\n});\n\n//VISITOR IP BY DEFAULT\nfetch(\"https://api.ipify.org/?format=json\")\n  .then((res) => res.json())\n  .then((data) => {\n    let ipAdress = data.ip;\n    getCoordinates(ipAdress);\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n\n//GET LATITUDE AND LONGITUDE\nasync function getCoordinates(inputValue) {\n  try {\n    const res = await fetch(\"https://geo.ipify.org/api/v2/country,city?apiKey=at_dfH8tDzTsnI6Fb3ulm1ilJVI7g7qd&ipAddress=\" + inputValue);\n    const data = await res.json();\n    const { lat, lng } = data.location;\n    updateMap(lat, lng);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//UPDATE MAP\n\nasync function updateMap(latitude, longitude){\n  try{\n    if(map){\n      map.remove()\n    }\n    // const spinner = document.querySelector(\"#spinner\");\n    // spinner.style.display = \"block\";\n    map = L.map(\"map\").setView([latitude, longitude], 14);\n    tileLayer.addTo(map);\n    L.marker([latitude, longitude]).addTo(map);\n  }catch(error){\n    console.log(error)\n  }\n}\n\n//FORM\nconst submitButton = document.querySelector(\"#submit\");\nconst inputArea = document.querySelector(\"input\");\nsubmitButton.addEventListener(\"click\", () => {\n  getCoordinates(inputArea.value);\n});\ndocument.addEventListener(\"keypress\", (e) => {\n  if (e.key === \"Enter\") {\n    getCoordinates(inputArea.value);\n  }\n});\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}