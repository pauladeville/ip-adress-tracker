{"mappings":"AAAA,IAAIA,IACJ,MAAMC,UAAYC,EAAED,UAAU,iDAAkD,CAC9EE,QAAS,KAEX,IAAIC,UAAY,GACZC,WAAa,GACjB,MAAMC,aAAeC,SAASC,cAAc,WACtCC,UAAYF,SAASC,cAAc,SAazCE,eAAeC,eAAeC,GACxB,gCAAgCC,KAAKD,IACvCR,UAAYQ,EACZH,UAAUK,UAAUC,OAAO,UAClB,kDAAkDF,KAAKD,IAChEH,UAAUK,UAAUC,OAAO,SAE3BV,WAAaO,GAEbH,UAAUK,UAAUE,IAAI,SAE1B,IACE,MAAMC,QAAYC,MAAM,+FAAiGd,UAAY,WAAaC,YAC5Ic,QAAaF,EAAIG,OACvBC,aAAaF,GACb,MAAMG,IAAEA,EAAGC,IAAEA,GAAQJ,EAAKK,SAC1BC,UAAUH,EAAKC,EACjB,CAAE,MAAOG,GACPC,QAAQC,IAAIF,EACd,CACF,CAGAhB,eAAee,UAAUI,EAAUC,GACjC,IACM9B,KACFA,IAAIe,SAEUR,SAASC,cAAc,YAC/BuB,MAAMC,QAAU,OACxBhC,IAAME,EAAEF,IAAI,OAAOiC,QAAQ,CAACJ,EAAUC,GAAY,IAClD7B,UAAUiC,MAAMlC,KAChBE,EAAEiC,OAAO,CAACN,EAAUC,IAAYI,MAAMlC,IACxC,CAAE,MAAO0B,GACPC,QAAQC,IAAIF,EACd,CACF,CA9CAR,MAAM,4DACHkB,MAAMnB,GAAQA,EAAIG,SAClBgB,MAAMjB,IACLR,eAAeQ,EAAKkB,GAAE,IAEvBC,OAAOZ,IACNC,QAAQD,MAAMA,EAAA,IA2ClB,MAAMa,cAAgBhC,SAASC,cAAc,4BACvCgC,eAAiBjC,SAASC,cAAc,6BACxCiC,eAAiBlC,SAASC,cAAc,6BACxCkC,UAAYnC,SAASC,cAAc,wBACzCE,eAAeW,aAAaF,GAC1BoB,cAAcI,YAAcxB,EAAKkB,GACjCG,eAAeG,YAAcxB,EAAKK,SAASoB,KAC3CH,eAAeE,YAAc,OAASxB,EAAKK,SAASqB,SACpDH,UAAUC,YAAcxB,EAAK2B,GAC/B,CAGAxC,aAAayC,iBAAiB,SAAS,KACrCpC,eAAeF,UAAUuC,MAAK,IAEhCzC,SAASwC,iBAAiB,YAAaE,IACvB,UAAVA,EAAEC,KACJvC,eAAeF,UAAUuC,MAAK","sources":["app.js"],"sourcesContent":["let map;\nconst tileLayer = L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n  maxZoom: 19,\n});\nlet ipAddress = \"\";\nlet domainName = \"\";\nconst submitButton = document.querySelector(\"#submit\");\nconst inputArea = document.querySelector(\"input\");\n\n//VISITOR IP BY DEFAULT\nfetch(\"http://localhost:8080/https://api.ipify.org/?format=json\")\n  .then((res) => res.json())\n  .then((data) => {\n    getCoordinates(data.ip);\n  })\n  .catch((error) => {\n    console.error(error);\n  });\n\n//GET LATITUDE AND LONGITUDE\nasync function getCoordinates(inputValue) {\n  if (/^([0-9]{1,3}\\.){3}[0-9]{1,3}$/.test(inputValue)) {\n    ipAddress = inputValue;\n    inputArea.classList.remove(\"error\");\n  } else if (/^[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z]{2,}$/.test(inputValue)) {\n    inputArea.classList.remove(\"error\");\n\n    domainName = inputValue;\n  } else {\n    inputArea.classList.add(\"error\");\n  }\n  try {\n    const res = await fetch(\"https://geo.ipify.org/api/v2/country,city?apiKey=at_dfH8tDzTsnI6Fb3ulm1ilJVI7g7qd&ipAddress=\" + ipAddress + \"&domain=\" + domainName);\n    const data = await res.json();\n    updateResult(data);\n    const { lat, lng } = data.location;\n    updateMap(lat, lng);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//UPDATE MAP\nasync function updateMap(latitude, longitude) {\n  try {\n    if (map) {\n      map.remove();\n    }\n    const spinner = document.querySelector(\"#spinner\");\n    spinner.style.display = \"none\";\n    map = L.map(\"map\").setView([latitude, longitude], 14);\n    tileLayer.addTo(map);\n    L.marker([latitude, longitude]).addTo(map);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//UPDATE RESULT\nconst addressResult = document.querySelector(\".result__item--address p\");\nconst locationResult = document.querySelector(\".result__item--location p\");\nconst timezoneResult = document.querySelector(\".result__item--timezone p\");\nconst ispResult = document.querySelector(\".result__item--isp p\");\nasync function updateResult(data) {\n  addressResult.textContent = data.ip;\n  locationResult.textContent = data.location.city;\n  timezoneResult.textContent = \"UTC \" + data.location.timezone;\n  ispResult.textContent = data.isp;\n}\n\n//SUBMIT FORM\nsubmitButton.addEventListener(\"click\", () => {\n  getCoordinates(inputArea.value);\n});\ndocument.addEventListener(\"keypress\", (e) => {\n  if (e.key === \"Enter\") {\n    getCoordinates(inputArea.value);\n  }\n});\n"],"names":["map","tileLayer","L","maxZoom","ipAddress","domainName","submitButton","document","querySelector","inputArea","async","getCoordinates","inputValue","test","classList","remove","add","res","fetch","data","json","updateResult","lat","lng","location","updateMap","error","console","log","latitude","longitude","style","display","setView","addTo","marker","then","ip","catch","addressResult","locationResult","timezoneResult","ispResult","textContent","city","timezone","isp","addEventListener","value","e","key"],"version":3,"file":"index.aa577e23.js.map"}